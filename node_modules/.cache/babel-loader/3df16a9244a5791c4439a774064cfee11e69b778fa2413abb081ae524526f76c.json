{"ast":null,"code":"var _jsxFileName = \"/Users/muthuraj/Desktop/stack-card/src/stackcard.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StackCard = ({\n  inView,\n  index\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `stack-card w-64 h-80 p-6 rounded-lg shadow-lg mb-4 transition-all duration-700 transform ${inView ? \"opacity-100 translate-y-0\" : \"opacity-0 translate-y-10\"}`,\n    style: {\n      backgroundColor: \"#E6E6FA\",\n      // Lavender color\n      position: \"absolute\",\n      // Make the cards overlap each other\n      top: `${index * 100}%` // Stack cards vertically by using the index\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-semibold mb-4\",\n      children: \"Stack Card Title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-lg\",\n      children: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam euismod lorem vel justo fermentum.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n_c = StackCard;\nconst StackCardContainer = () => {\n  _s();\n  const [inView, setInView] = useState([false, false, false, false]);\n  useEffect(() => {\n    const observer = new IntersectionObserver(entries => {\n      entries.forEach((entry, index) => {\n        if (entry.isIntersecting) {\n          setInView(prev => {\n            const newInView = [...prev];\n            newInView[index] = true;\n            return newInView;\n          });\n        }\n      });\n    }, {\n      threshold: 0.3\n    });\n    const cardElements = document.querySelectorAll(\".stack-card\");\n    cardElements.forEach(card => observer.observe(card));\n    return () => {\n      cardElements.forEach(card => observer.unobserve(card));\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative w-full h-[80vh] flex justify-center items-center mt-16\",\n    children: [...Array(4)].map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stack-card\",\n      style: {\n        width: \"16rem\",\n        height: \"20rem\",\n        position: \"absolute\" // Make sure all cards overlap\n      },\n      children: /*#__PURE__*/_jsxDEV(StackCard, {\n        inView: inView[index],\n        index: index\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(StackCardContainer, \"tzIfO5hZse7p9F4m88nsbDjPlWg=\");\n_c2 = StackCardContainer;\nexport default StackCardContainer;\nvar _c, _c2;\n$RefreshReg$(_c, \"StackCard\");\n$RefreshReg$(_c2, \"StackCardContainer\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","StackCard","inView","index","className","style","backgroundColor","position","top","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","StackCardContainer","_s","setInView","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","prev","newInView","threshold","cardElements","document","querySelectorAll","card","observe","unobserve","Array","map","_","width","height","_c2","$RefreshReg$"],"sources":["/Users/muthuraj/Desktop/stack-card/src/stackcard.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nconst StackCard = ({ inView, index }) => {\n  return (\n    <div\n      className={`stack-card w-64 h-80 p-6 rounded-lg shadow-lg mb-4 transition-all duration-700 transform ${\n        inView\n          ? \"opacity-100 translate-y-0\"\n          : \"opacity-0 translate-y-10\"\n      }`}\n      style={{\n        backgroundColor: \"#E6E6FA\", // Lavender color\n        position: \"absolute\", // Make the cards overlap each other\n        top: `${index * 100}%`, // Stack cards vertically by using the index\n      }}\n    >\n      <h2 className=\"text-2xl font-semibold mb-4\">Stack Card Title</h2>\n      <p className=\"text-lg\">\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam euismod\n        lorem vel justo fermentum.\n      </p>\n    </div>\n  );\n};\n\nconst StackCardContainer = () => {\n  const [inView, setInView] = useState([false, false, false, false]);\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      (entries) => {\n        entries.forEach((entry, index) => {\n          if (entry.isIntersecting) {\n            setInView((prev) => {\n              const newInView = [...prev];\n              newInView[index] = true;\n              return newInView;\n            });\n          }\n        });\n      },\n      { threshold: 0.3 }\n    );\n\n    const cardElements = document.querySelectorAll(\".stack-card\");\n    cardElements.forEach((card) => observer.observe(card));\n\n    return () => {\n      cardElements.forEach((card) => observer.unobserve(card));\n    };\n  }, []);\n\n  return (\n    <div className=\"relative w-full h-[80vh] flex justify-center items-center mt-16\">\n      {[...Array(4)].map((_, index) => (\n        <div\n          key={index}\n          className=\"stack-card\"\n          style={{\n            width: \"16rem\",\n            height: \"20rem\",\n            position: \"absolute\", // Make sure all cards overlap\n          }}\n        >\n          <StackCard inView={inView[index]} index={index} />\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default StackCardContainer;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,SAAS,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAM,CAAC,KAAK;EACvC,oBACEH,OAAA;IACEI,SAAS,EAAE,4FACTF,MAAM,GACF,2BAA2B,GAC3B,0BAA0B,EAC7B;IACHG,KAAK,EAAE;MACLC,eAAe,EAAE,SAAS;MAAE;MAC5BC,QAAQ,EAAE,UAAU;MAAE;MACtBC,GAAG,EAAE,GAAGL,KAAK,GAAG,GAAG,GAAG,CAAE;IAC1B,CAAE;IAAAM,QAAA,gBAEFT,OAAA;MAAII,SAAS,EAAC,6BAA6B;MAAAK,QAAA,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjEb,OAAA;MAAGI,SAAS,EAAC,SAAS;MAAAK,QAAA,EAAC;IAGvB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV,CAAC;AAACC,EAAA,GArBIb,SAAS;AAuBf,MAAMc,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACd,MAAM,EAAEe,SAAS,CAAC,GAAGnB,QAAQ,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;EAElED,SAAS,CAAC,MAAM;IACd,MAAMqB,QAAQ,GAAG,IAAIC,oBAAoB,CACtCC,OAAO,IAAK;MACXA,OAAO,CAACC,OAAO,CAAC,CAACC,KAAK,EAAEnB,KAAK,KAAK;QAChC,IAAImB,KAAK,CAACC,cAAc,EAAE;UACxBN,SAAS,CAAEO,IAAI,IAAK;YAClB,MAAMC,SAAS,GAAG,CAAC,GAAGD,IAAI,CAAC;YAC3BC,SAAS,CAACtB,KAAK,CAAC,GAAG,IAAI;YACvB,OAAOsB,SAAS;UAClB,CAAC,CAAC;QACJ;MACF,CAAC,CAAC;IACJ,CAAC,EACD;MAAEC,SAAS,EAAE;IAAI,CACnB,CAAC;IAED,MAAMC,YAAY,GAAGC,QAAQ,CAACC,gBAAgB,CAAC,aAAa,CAAC;IAC7DF,YAAY,CAACN,OAAO,CAAES,IAAI,IAAKZ,QAAQ,CAACa,OAAO,CAACD,IAAI,CAAC,CAAC;IAEtD,OAAO,MAAM;MACXH,YAAY,CAACN,OAAO,CAAES,IAAI,IAAKZ,QAAQ,CAACc,SAAS,CAACF,IAAI,CAAC,CAAC;IAC1D,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE9B,OAAA;IAAKI,SAAS,EAAC,iEAAiE;IAAAK,QAAA,EAC7E,CAAC,GAAGwB,KAAK,CAAC,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,CAAC,EAAEhC,KAAK,kBAC1BH,OAAA;MAEEI,SAAS,EAAC,YAAY;MACtBC,KAAK,EAAE;QACL+B,KAAK,EAAE,OAAO;QACdC,MAAM,EAAE,OAAO;QACf9B,QAAQ,EAAE,UAAU,CAAE;MACxB,CAAE;MAAAE,QAAA,eAEFT,OAAA,CAACC,SAAS;QAACC,MAAM,EAAEA,MAAM,CAACC,KAAK,CAAE;QAACA,KAAK,EAAEA;MAAM;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC,GAR7CV,KAAK;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OASP,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACG,EAAA,CA5CID,kBAAkB;AAAAuB,GAAA,GAAlBvB,kBAAkB;AA8CxB,eAAeA,kBAAkB;AAAC,IAAAD,EAAA,EAAAwB,GAAA;AAAAC,YAAA,CAAAzB,EAAA;AAAAyB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}